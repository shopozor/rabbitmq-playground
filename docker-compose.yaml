version: "3.6"
services:
  postgres:
    image: postgres:11.2-alpine
    restart: "always"
    volumes:
      - db_data:/var/lib/postgresql-11.2/data
      - ./backend/database-service/scripts/init_test_db.sql:/docker-entrypoint-initdb.d/init.sql
  graphql-engine-empty:
    image: hasura/graphql-engine:v1.3.3
    depends_on:
      - postgres
    restart: "always"
    environment:
      EMAIL_ORDER_WEBHOOK_URL: http://gateway.openfaas:8080/function/mailing.dev/emailorder
      FUNCTION_NAMESPACE: dev-fn
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      INTERNAL_OPENFAAS_GATEWAY_HOST: gateway.openfaas
      INTERNAL_OPENFAAS_GATEWAY_PORT: 8080
  fixtures-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: fixtures-app
    image: shopozor/fixtures-service:${TAG:-local}
    restart: "no"
    volumes:
      - .:/app
    environment:
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: /app/shared/python
    entrypoint: ./backend/fixtures-generator/entrypoint.sh /app/shared/fixtures ./backend/fixtures-generator ./shared/pictures medium
  database-service-tests:
    build:
      context: .
      dockerfile: ./backend/database-service/tests/Dockerfile
      target: python-tests
    restart: "no"
    depends_on:
      - graphql-engine-empty
    environment:
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: /app/shared/python
    volumes:
      - .:/app
    entrypoint: ./backend/database-service/tests/entrypoint.sh graphql-engine-empty 8080 /app

volumes:
  db_data: